
open prims
import int as i
import nat as n
import list as l
import bits as b

# convert ascii byte '0' - '9' to natural number.
# fails if byte is not in appropriate range.
prog ascii-digit [
    [0b0 get] loop      # remove leading zero bits
    48 n/sub            # subtract 48 (ascii '0')
    [10 n/lt] verify    # max result is 9 
]

prog to-ascii-digit [48 n/add 0b00 b/prefix]

# convert a string such as "12345" to number 12345
# (incomplete; doesn't support negatives)
prog atoi [
    [0] dip 
    [ascii-digit [10 n/mul] dip n/add] l/each
]
assert [ "1234567890" atoi 1234567890 eq ]
assert [ ["123abc" atoi] reject ]

# convert a non-negative integer to a string.
prog itoa [
    [ 0 eq ]    
    [ "0"  ]
    [ ""
      [[0 eq] dip]
      [[10 n/divmod to-ascii-digit] dip l/pushl]
      until-do
    ] try-then-else
]
assert [1234567890 itoa "1234567890" eq]

macro log-every-nth [
    [n/mod 0 eq] p-curry p-verify
    [copy "step" log-info-v] p-try-then
]

prog main [
    ['init get]
    [ # on init, build a step:[Sum,Counter] pair.
        l/popl drop atoi # initial Counter from arg[0] 
        [0] dip l2       # initial Sum is zero
        'step d1         # prepared for next step   
    ]
    [ # on each step:[Sum, Counter]
      # if Counter is 0, then print Sum and halt.
      # otherwise, print every 1000000th Counter, 
      #            add Counter to Sum
      #            decrement Counter
      #            continue to next step
        'step get unl2
        [ 0 eq 
          "sum" log-info-v 
          'halt
        ]
        [
            100000 log-every-nth
            copy 
            [n/add] dip
            n/decrement
            l2 'step d1
        ]
        try-else
    ]
    try-then-else
]

# variation that loops all at once
prog interior [[['halt get] verify][main]until-do]

prog fibonacci [
    [0 eq]
    [0]
    [ n/decrement
      [0 1] dip
      [copy [swap] dip n/add] n/repeat
      [drop] dip
    ] try-then-else
]

prog try-fib [
    'init get 
    l/popl drop 
    atoi 
    fibonacci 
    itoa
    "result" log-info-v
    'halt 
]

export main, interior, try-fib
